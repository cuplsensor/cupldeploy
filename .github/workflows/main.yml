name: CI

# Controls when the action will run. 
on:
  # Workflow is triggered by the following events.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get_event:
    runs-on: ubuntu-20.04
    name: Find out which event has triggered the workflow and set the environment accordingly.
    steps:
      - name: Set environment based on event_name. 
        run: |
          echo "::set-output name=action_fruit::strawberry"
          ENVNAME=${{ github.event.release.tag_name }} || "latest"
          echo $ENVNAME
        
  backend_to_droplet:
    runs-on: ubuntu-20.04
    name: Uses docker-compose over SSH to run cuplbackend on a droplet.
    steps:          
      # Check out the repository but exclude submodules
      - uses: actions/checkout@v2
        with:
          submodules: false
      - uses: cuplsensor/desploy-backend-action@v1
        with:
          # DigitalOcean droplet parameters.
          droplet_username:           ${{ secrets.CUPL_DEPLOY_LATEST_USERNAME }}
          droplet_ssh_private_key:    ${{ secrets.CUPL_DEPLOY_LATEST_KEY }}
          droplet_host:               ${{ secrets.CUPL_DEPLOY_LATEST_HOST }}
          # Database connection for cuplbackend.
          db_user:                    ${{ secrets.DB_USER }}
          db_pass:                    ${{ secrets.DB_PASS }}
          db_name:                    ${{ secrets.DB_NAME }}
          db_host:                    ${{ secrets.DB_HOST }}
          # Randomised strings for cuplbackend.
          adminapi_clientsecret:      ${{ secrets.ADMINAPI_CLIENTSECRET }}
          tagtoken_clientsecret:      ${{ secrets.TAGTOKEN_CLIENTSECRET }}
          hashids_salt:               ${{ secrets.HASHIDS_SALT }}
          csrf_session_key:           ${{ secrets.CSRF_SESSION_KEY }}
          secret_key:                 ${{ secrets.SECRET_KEY }}        

  # This workflow contains a single job called "build"
  build:
    needs: [backend_to_droplet]
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      # Runs a set of commands using the runners shell. Set CI to false to stop create-react-app from erroring on warnings.
      - name: Run a multi-line script
        run: |
          cd ./cuplfrontend/reactapp
          npm install
          CI=false npm run build
        env: 
          REACT_APP_WSB_ORIGIN: https://latest.b.cupl.uk
          
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'   # optional: defaults to us-east-1
          SOURCE_DIR: './cuplfrontend/reactapp/build'      # optional: defaults to entire repository
          DEST_DIR: 'latest'

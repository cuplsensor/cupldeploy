name: CI

# Controls when the action will run. 
on:
  # Workflow is triggered by the following events.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  envname_job:
    runs-on: ubuntu-20.04
    name: Set environment name based on the event.
    outputs:
      envname: ${{ steps.set_envname.outputs.envname }}
    steps:
      - name: Set environment based on event_name.
        id: set_envname
        run: |
          if ${{ github.event_name == 'release' }}; then
              TAGNAME=${{ github.event.release.tag_name }}
              TAGNAME_PRE_DOT=$(echo "${TAGNAME%%.*}")
              echo "::set-output name=envname::$TAGNAME_PRE_DOT"
          else
              echo "::set-output name=envname::latest"
          fi
        
  backend_to_droplet:
    runs-on: ubuntu-20.04
    name: Uses docker-compose over SSH to run cuplbackend on a droplet.
    needs: envname_job
    steps:
      - name: Test step
        run: |
          ENVNAME_UC=$(echo ${{ needs.envname_job.outputs.envname }} | tr [a-z] [A-Z])
          echo "PTR_DROPLET_USERNAME=${ENVNAME_UC}_DROPLET_USERNAME" >> $GITHUB_ENV
          echo "PTR_DROPLET_SSH_PRIVATE_KEY=${ENVNAME_UC}_DROPLET_SSH_PRIVATE_KEY" >> $GITHUB_ENV
          echo "PTR_DROPLET_HOST=${ENVNAME_UC}_DROPLET_HOST" >> $GITHUB_ENV
          echo "PTR_ADMINAPI_CLIENTSECRET=${ENVNAME_UC}_ADMINAPI_CLIENTSECRET" >> $GITHUB_ENV
          echo "PTR_TAGTOKEN_CLIENTSECRET=${ENVNAME_UC}_TAGTOKEN_CLIENTSECRET" >> $GITHUB_ENV
          echo "PTR_HASHIDS_SALT=${ENVNAME_UC}_HASHIDS_SALT" >> $GITHUB_ENV
          echo "PTR_CSRF_SESSION_KEY=${ENVNAME_UC}_CSRF_SESSION_KEY" >> $GITHUB_ENV
          echo "PTR_SECRET_KEY=${ENVNAME_UC}_SECRET_KEY" >> $GITHUB_ENV
          
      - name: Test step 2
        run: |
          echo "looking up environment variables:"
          echo $PTR_DROPLET_USERNAME
          echo $PTR_DROPLET_SSH_PRIVATE_KEY
          echo $PTR_DROPLET_HOST
          echo $PTR_ADMINAPI_CLIENTSECRET
          echo $PTR_TAGTOKEN_CLIENTSECRET
          echo $PTR_HASHIDS_SALT
          echo $PTR_CSRF_SESSION_KEY
          echo $PTR_SECRET_KEY
      
      # Check out the repository but exclude submodules
      - uses: actions/checkout@v2
        with:
          submodules: false
      - uses: cuplsensor/deploy-backend-action@v1
        if: ${{ false }}
        with:
          # DigitalOcean droplet parameters.
          droplet_username:           ${{ secrets.CUPL_DEPLOY_LATEST_USERNAME }}
          droplet_ssh_private_key:    ${{ secrets.CUPL_DEPLOY_LATEST_KEY }}
          droplet_host:               ${{ secrets.CUPL_DEPLOY_LATEST_HOST }}
          # Database connection for cuplbackend.
          db_user:                    ${{ secrets.DB_USER }}
          db_pass:                    ${{ secrets.DB_PASS }}
          db_name:                    ${{ secrets.DB_NAME }}
          db_host:                    ${{ secrets.DB_HOST }}
          # Randomised strings for cuplbackend.
          adminapi_clientsecret:      ${{ secrets.ADMINAPI_CLIENTSECRET }}
          tagtoken_clientsecret:      ${{ secrets.TAGTOKEN_CLIENTSECRET }}
          hashids_salt:               ${{ secrets.HASHIDS_SALT }}
          csrf_session_key:           ${{ secrets.CSRF_SESSION_KEY }}
          secret_key:                 ${{ secrets.SECRET_KEY }}        

  # This workflow contains a single job called "build"
  build:
    needs: [backend_to_droplet]
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      # Runs a set of commands using the runners shell. Set CI to false to stop create-react-app from erroring on warnings.
      - name: Run a multi-line script
        if: ${{ false }}
        run: |
          cd ./cuplfrontend/reactapp
          npm install
          CI=false npm run build
        env: 
          REACT_APP_WSB_ORIGIN: https://latest.b.cupl.uk
          
      - uses: jakejarvis/s3-sync-action@master
        if: ${{ false }}
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'   # optional: defaults to us-east-1
          SOURCE_DIR: './cuplfrontend/reactapp/build'      # optional: defaults to entire repository
          DEST_DIR: 'latest'
